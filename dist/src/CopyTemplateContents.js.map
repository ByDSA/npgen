{"version":3,"file":"CopyTemplateContents.js","sourceRoot":"","sources":["../../src/CopyTemplateContents.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAC/B,0DAA0B;AAC1B,sDAAsB;AACtB,oDAAoB;AACpB,wDAAwB;AAGxB,SAAS,YAAY,CAAC,WAAmB;IACvC,IAAI,YAAE,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;QAC9B,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,GAAG,CAAC,UAAU,WAAW,sCAAsC,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IAED,YAAE,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAE1B,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,YAAY,CAAC,YAAoB,EAAE,YAAoB,EAAE,UAAsB;IACtF,MAAM,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC;IAC9B,MAAM,WAAW,GAAG,YAAE,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAEjD,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC3B,MAAM,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACnD,MAAM,KAAK,GAAG,YAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAExC,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC7D,OAAO;QAET,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;YAClB,MAAM,SAAS,GAAG,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAEhD,IAAI,MAAM,CAAC,cAAc,IAAI,UAAU,CAAC,YAAY,EAAE,MAAM,CAAC,cAAc,CAAC;gBAC1E,YAAE,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;iBACtC;gBACH,IAAI,QAAQ,GAAG,YAAE,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBAErD,QAAQ,GAAG,aAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;gBAEjD,YAAE,CAAC,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;aAC/C;SACF;aAAM,IAAI,KAAK,CAAC,WAAW,EAAE,EAAE;YAC9B,YAAE,CAAC,SAAS,CAAC,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;YAE5C,MAAM,eAAe,GAAG,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACtD,MAAM,eAAe,GAAG,cAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAEtD,YAAY,CAAC,eAAe,EAAE,eAAe,EAAE,UAAU,CAAC,CAAC;SAC5D;IACH,CAAC,CAAE,CAAC;AACN,CAAC;AAED,SAAS,UAAU,CAAC,GAAW,EAAE,KAAe;IAC9C,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;QACrB,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACd,OAAO,IAAI,CAAC;KACf;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAwB,mBAAmB,CAAC,OAAmB;IAC7D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;QACnC,OAAO;IAET,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;AAClE,CAAC;AALD,sCAKC","sourcesContent":["/* eslint-disable no-console */\nimport chalk from \"chalk\";\nimport ejs from \"ejs\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport CliOptions from \"./CliOptions\";\n\nfunction createFolder(projectPath: string) {\n  if (fs.existsSync(projectPath)) {\n    console.log(chalk.red(`Folder ${projectPath} exists. Delete or use another name.`));\n    process.exit(1);\n  }\n\n  fs.mkdirSync(projectPath);\n\n  return true;\n}\n\nfunction copyContents(originFolder: string, remoteFolder: string, cliOptions: CliOptions) {\n  const { config } = cliOptions;\n  const filesToCopy = fs.readdirSync(originFolder);\n\n  filesToCopy.forEach((file) => {\n    const origFilePath = path.join(originFolder, file);\n    const stats = fs.statSync(origFilePath);\n\n    if (config.ignoreFiles && config.ignoreFiles.indexOf(file) > -1)\n      return;\n\n    if (stats.isFile()) {\n      const writePath = path.join(remoteFolder, file);\n\n      if (config.ignoreFilesEJS && matchArray(origFilePath, config.ignoreFilesEJS))\n        fs.copyFileSync(origFilePath, writePath);\n      else {\n        let contents = fs.readFileSync(origFilePath, \"utf8\");\n\n        contents = ejs.render(contents, cliOptions.args);\n\n        fs.writeFileSync(writePath, contents, \"utf8\");\n      }\n    } else if (stats.isDirectory()) {\n      fs.mkdirSync(path.join(remoteFolder, file));\n\n      const newOriginFolder = path.join(originFolder, file);\n      const newRemoteFolder = path.join(remoteFolder, file);\n\n      copyContents(newOriginFolder, newRemoteFolder, cliOptions);\n    }\n  } );\n}\n\nfunction matchArray(str: string, array: string[]): boolean {\n  for (const a of array) {\n    if (str.match(a))\n      return true;\n  }\n\n  return false;\n}\n\nexport default function copyTemplateContent(options: CliOptions) {\n  if (!createFolder(options.targetPath))\n    return;\n\n  copyContents(options.templatePath, options.targetPath, options);\n}\n"]}