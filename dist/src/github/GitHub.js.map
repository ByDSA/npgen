{"version":3,"file":"GitHub.js","sourceRoot":"","sources":["../../../src/github/GitHub.ts"],"names":[],"mappings":";;;;AAAA,+BAA+B;AAC/B,kEAAmE;AACnE,wCAAwC;AACxC,4DAA4B;AAC5B,wDAAwB;AACxB,8DAA4B;AAC5B,0CAAyC;AAEzC,IAAI,KAAuB,CAAC;AAC5B,IAAI,OAA0B,CAAC;AAC/B,MAAM,oBAAoB,GAAG,kBAAkB,CAAC;AAIhD,SAAsB,UAAU,CAAC,IAAsB;;QACrD,OAAO,CAAC,MAAM,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;IACrE,CAAC;CAAA;AAFD,gCAEC;AAED,SAAsB,SAAS,CAAC,QAAgB;;QAC9C,OAAO,CAAC,MAAM,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa,CAAE;YAC/C,QAAQ;SACT,CAAE,CAAC;IACN,CAAC;CAAA;AAJD,8BAIC;AAED,SAAe,UAAU;;QACvB,MAAM,QAAQ,GAAG,sBAAsB,CAAC;QACxC,MAAM,IAAI,GAAG,yCAAqB,CAAE;YAClC,UAAU,EAAE,WAAW;YACvB,MAAM,EAAE,CAAC,MAAM,CAAC;YAChB,QAAQ;YACR,cAAc,CAAC,YAAY;gBACzB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,gBAAgB,CAAC,CAAC;gBACtD,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC;YACxD,CAAC;SACF,CAAE,CAAC;QACJ,MAAM,mBAAmB,GAAG,MAAM,IAAI,CAAE;YACtC,IAAI,EAAE,OAAO;SACd,CAAE,CAAC;QAEJ,OAAO,mBAAmB,CAAC,KAAK,CAAC;IACnC,CAAC;CAAA;AAED,SAAe,UAAU;;QACvB,IAAI,CAAC,OAAO,EAAE;YACZ,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,eAAe,EAAE,CAAC;gBAE1B,IAAI,CAAC,KAAK,EAAE;oBACV,KAAK,GAAG,MAAM,UAAU,EAAE,CAAC;oBAC3B,cAAc,EAAE,CAAC;iBAClB;aACF;YAED,OAAO,GAAG,IAAI,cAAO,CAAE;gBACrB,IAAI,EAAE,KAAK;aACZ,CAAE,CAAC;SACL;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;CAAA;AAED,SAAS,eAAe;IACtB,gBAAM,CAAC,MAAM,EAAE,CAAC;IAChB,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAE3D,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED,SAAS,cAAc;IACrB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC1C,MAAM,GAAG,GAAG,QAAQ,oBAAoB,IAAI,KAAK,OAAO,cAAI,CAAC,IAAI,CAAC,eAAO,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC;IAEvF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,iBAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClB,CAAC","sourcesContent":["/* eslint-disable no-console */\nimport { createOAuthDeviceAuth } from \"@octokit/auth-oauth-device\";\nimport { Octokit } from \"@octokit/rest\";\nimport dotenv from \"dotenv\";\nimport path from \"path\";\nimport shell from \"shelljs\";\nimport { baseDir } from \"../utils/utils\";\n\nlet token: string|undefined;\nlet octokit: Octokit|undefined;\nconst GITHUB_APP_TOKEN_VAR = \"GITHUB_APP_TOKEN\";\n\nexport type CreateRepoParams = { name: string; description?: string; private?: boolean };\n\nexport async function createRepo(opts: CreateRepoParams) {\n  return (await getOctokit()).repos.createForAuthenticatedUser(opts);\n}\n\nexport async function fetchUser(username: string) {\n  return (await getOctokit()).users.getByUsername( {\n    username,\n  } );\n}\n\nasync function fetchToken() {\n  const clientId = \"ebc29700f97760503537\";\n  const auth = createOAuthDeviceAuth( {\n    clientType: \"oauth-app\",\n    scopes: [\"repo\"],\n    clientId,\n    onVerification(verification) {\n      console.log(\"Open %s\", verification.verification_uri);\n      console.log(\"Enter code: %s\", verification.user_code);\n    },\n  } );\n  const tokenAuthentication = await auth( {\n    type: \"oauth\",\n  } );\n\n  return tokenAuthentication.token;\n}\n\nasync function getOctokit(): Promise<Octokit> {\n  if (!octokit) {\n    if (!token) {\n      token = getTokenFromEnv();\n\n      if (!token) {\n        token = await fetchToken();\n        saveTokenToEnv();\n      }\n    }\n\n    octokit = new Octokit( {\n      auth: token,\n    } );\n  }\n\n  return octokit;\n}\n\nfunction getTokenFromEnv(): string|undefined {\n  dotenv.config();\n  const GITHUB_APP_TOKEN = process.env[GITHUB_APP_TOKEN_VAR];\n\n  return GITHUB_APP_TOKEN;\n}\n\nfunction saveTokenToEnv() {\n  console.log(\"Saving token into .env ...\");\n  const cmd = `echo ${GITHUB_APP_TOKEN_VAR}=${token} >> ${path.join(baseDir(), \".env\")}`;\n\n  console.log(cmd);\n  shell.exec(cmd);\n}\n"]}