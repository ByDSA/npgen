{"version":3,"file":"ProjectQuestions.js","sourceRoot":"","sources":["../../../../src/prompt/project-questions/ProjectQuestions.ts"],"names":[],"mappings":";;;;AAAA,oDAAoB;AACpB,wDAAwB;AACxB,6CAAkD;AAClD,sCAA0C;AAE1C,MAAM,gBAAgB,GAAG,cAAI,CAAC,IAAI,CAAC,eAAO,EAAE,EAAE,WAAW,CAAC,CAAC;AAC3D,MAAM,OAAO,GAAG,YAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;AAEpC,QAAA,YAAY,GAAG,UAAU,CAAC;AAE1B,QAAA,gBAAgB,GAAG,MAAM,CAAC;AAE1B,QAAA,uBAAuB,GAAG,aAAa,CAAC;AAExC,QAAA,yBAAyB,GAAG;IACvC,IAAI,EAAE,oBAAY;IAClB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,mDAAmD;IAC5D,OAAO,EAAE,OAAO;CACjB,CAAC;AAEF,MAAM,kBAAkB,GAAG,oBAAoB,CAAC;AAEnC,QAAA,qBAAqB,GAAG;IACnC,IAAI,EAAE,wBAAgB;IACtB,IAAI,EAAE,OAAO;IACb,OAAO,EAAE,eAAe;IACxB,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,YAAI,EAAE,CAAC,wBAAgB,CAAC;IACrC,QAAQ,EAAE,CAAC,KAAa,EAAE,EAAE;QAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,OAAO,yEAAyE,CAAC;QAEnF,IAAI,YAAE,CAAC,UAAU,CAAC,sBAAa,CAAC,KAAK,CAAC,CAAC;YACrC,OAAO,UAAU,KAAK,sCAAsC,CAAC;QAE/D,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAC;AAEF,MAAM,yBAAyB,GAAG,qBAAqB,CAAC;AAE3C,QAAA,4BAA4B,GAAG;IAC1C,IAAI,EAAE,+BAAuB;IAC7B,IAAI,EAAE,OAAO;IACb,OAAO,EAAE,sBAAsB;IAC/B,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,YAAI,EAAE,CAAC,+BAAuB,CAAC;IAC5C,QAAQ,EAAE,CAAC,KAAa,EAAE,EAAE;QAC1B,IAAI,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC;YACvC,OAAO,IAAI,CAAC;QAEd,OAAO,wFAAwF,CAAC;IAClG,CAAC;CACF,CAAC;AAEW,QAAA,iBAAiB,GAAG;IAC/B,iCAAyB;IACzB,6BAAqB;IACrB,oCAA4B;CAC7B,CAAC","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport { argv, baseDir } from \"../../utils/utils\";\nimport { getTargetPath } from \"../Prompt\";\n\nconst TEMPLATES_FOLDER = path.join(baseDir(), \"templates\");\nconst CHOICES = fs.readdirSync(TEMPLATES_FOLDER);\n\nexport const ARG_TEMPLATE = \"template\";\n\nexport const ARG_PROJECT_NAME = \"name\";\n\nexport const ARG_PROJECT_DESCRIPTION = \"description\";\n\nexport const PROJECT_TEMPLATE_QUESTION = {\n  name: ARG_TEMPLATE,\n  type: \"list\",\n  message: \"What project template would you like to generate?\",\n  choices: CHOICES,\n};\n\nconst REGEX_PROJECT_NAME = /^([A-Za-z\\-_\\d])+$/;\n\nexport const PROJECT_NAME_QUESTION = {\n  name: ARG_PROJECT_NAME,\n  type: \"input\",\n  message: \"Project name:\",\n  when: () => !argv()[ARG_PROJECT_NAME],\n  validate: (input: string) => {\n    if (!REGEX_PROJECT_NAME.test(input))\n      return \"Project name may only include letters, numbers, underscores and hashes.\";\n\n    if (fs.existsSync(getTargetPath(input)))\n      return `Folder ${input} exists. Delete or use another name.`;\n\n    return true;\n  },\n};\n\nconst REGEX_PROJECT_DESCRIPTION = /^([A-Za-z\\-_\\d ])+$/;\n\nexport const PROJECT_DESCRIPTION_QUESTION = {\n  name: ARG_PROJECT_DESCRIPTION,\n  type: \"input\",\n  message: \"Project description:\",\n  when: () => !argv()[ARG_PROJECT_DESCRIPTION],\n  validate: (input: string) => {\n    if (REGEX_PROJECT_DESCRIPTION.test(input))\n      return true;\n\n    return \"Project description may only include letters, numbers, underscores, hashes and spaces.\";\n  },\n};\n\nexport const PROJECT_QUESTIONS = [\n  PROJECT_TEMPLATE_QUESTION,\n  PROJECT_NAME_QUESTION,\n  PROJECT_DESCRIPTION_QUESTION,\n];\n"]}